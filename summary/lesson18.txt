Постраничное отображение длинных списков (pagination).
https://www.youtube.com/watch?v=Sc3EQBy0tuk&list=PLU2ftbIeotGoGSEUf54LQH-DgiQPF2XRO&index=18&ab_channel=letsCode

Добавляем отображение длинных списков с разбивкой на страницы (pagination).

Зачастую, при построении сайтов и вэб приложений нет неоходимости отображать списки элементов целиком, тем более,
что список может быть очень длинным, что негативно скажется работе браузера и сервера.
В такой ситуации используется постраничный вывод данных (пагинация, pagination).
В Spring MVC для этого также существует решение, которое достаточно просто внедрить в любой существующий вывод списка данных из репозитория.


0. Добавили аргумент Pageable pageable в параметры метода и поменяли тип возвращаемого значения с листа на Page.
С объектом Pageable pageable мы передаем данные: какую страницу выводить, сколько элементов на странице и сортировку.
(данные, чтобы получить нужную Page)
Page<Message> - это страница, которая выводит саблист полученных элементов, в соответствии с параметрами Pageable pageable.

Page<Message> findAll(Pageable pageable);

Page<Message> findByTag(String tag, Pageable pageable);

1. Устанавливая эту аннотацию над методом контроллера, мы передаем в метод дефолтное значение для Pageable,
в котормо выводится 10 элементов с 0-ой страницы. Мы установили сортировки по id, по убыванию(сначала самые новые).

@PageableDefault(sort = {"id"}, direction = Sort.Direction.DESC) Pageable pageable)

2. Во фримаркере рекомендуется заменять знаки <> на lt(меньше) и gt(больше)
<#if page.getTotalPages() gt 7>
...
</#if>


